<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>QEMU 源码分析 on 夜云泊</title>
    <link>https://lifeislife.cn/categories/qemu-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</link>
    <description>Recent content in QEMU 源码分析 on 夜云泊</description>
    <generator>Hugo -- 0.131.0</generator>
    <language>zh</language>
    <lastBuildDate>Sun, 07 Jul 2024 10:22:12 +0000</lastBuildDate>
    <atom:link href="https://lifeislife.cn/categories/qemu-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>QEMU 常用命令</title>
      <link>https://lifeislife.cn/posts/qemu%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Sun, 07 Jul 2024 10:22:12 +0000</pubDate>
      <guid>https://lifeislife.cn/posts/qemu%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid>
      <description>QEMU 是一个开源的虚拟化软件，它能够模拟不同的硬件平台，让用户在不同的操作系统之间进行切换和测试。以下是 QEMU 常用命令的总结文档，包含每个命令的功能</description>
    </item>
    <item>
      <title>QEMU 虚拟机网络配置</title>
      <link>https://lifeislife.cn/posts/qemu%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Sat, 05 Aug 2023 14:47:54 +0000</pubDate>
      <guid>https://lifeislife.cn/posts/qemu%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/</guid>
      <description>Quick Setup 安装工具 安装两个网络管理工具用于建立网桥以及虚拟网卡： 1 2 3 4 # 安装虚拟网桥工具 sudo apt install bridge-utils -y # UML（User-mode linux）工具 sudo</description>
    </item>
    <item>
      <title>QEMU&#39;s instance_init() vs. realize()</title>
      <link>https://lifeislife.cn/posts/qemu-s-instance-init-vs-realize/</link>
      <pubDate>Tue, 01 Nov 2022 09:51:28 +0000</pubDate>
      <guid>https://lifeislife.cn/posts/qemu-s-instance-init-vs-realize/</guid>
      <description>转载自huth (Thomas Huth)的一篇文章，原文已经 404，从网页快照中找回的文章。 Note that this is a blog post for (new) QEMU developers. If you are just interested in using QEMU, you can certainly skip this text. Otherwise, in case you have ever</description>
    </item>
    <item>
      <title>QEMU 源码分析-QOM</title>
      <link>https://lifeislife.cn/posts/qemu%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-qom/</link>
      <pubDate>Wed, 09 Mar 2022 16:02:19 +0000</pubDate>
      <guid>https://lifeislife.cn/posts/qemu%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-qom/</guid>
      <description>QOM 简介 QOM(QEMU Object Model) 是 QEMU 的一个模块，用于描述虚拟机的结构，包括虚拟机的 CPU、内存、硬盘、网络、输入输出设备等。QEMU 为了方便整个系统的构建，实现</description>
    </item>
    <item>
      <title>QEMU 源码分析-内存虚拟化</title>
      <link>https://lifeislife.cn/posts/qemu%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-%E5%86%85%E5%AD%98%E8%99%9A%E6%8B%9F%E5%8C%96/</link>
      <pubDate>Tue, 25 Jan 2022 13:42:11 +0000</pubDate>
      <guid>https://lifeislife.cn/posts/qemu%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-%E5%86%85%E5%AD%98%E8%99%9A%E6%8B%9F%E5%8C%96/</guid>
      <description>1.大部分转载自QEMU 内存虚拟化源码分析 | Keep Coding | 苏易北 2.原文源码为 QEMU1.2.0，版本较旧，部分源码内容根据 QEMU6.2 版本修改 3.部分内容根</description>
    </item>
    <item>
      <title>QEMU 源码分析-外设模拟（以 GPIO 为例）</title>
      <link>https://lifeislife.cn/posts/qemu%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-%E5%A4%96%E8%AE%BE%E6%A8%A1%E6%8B%9F%E4%BB%A5gpio%E4%B8%BA%E4%BE%8B/</link>
      <pubDate>Thu, 11 Nov 2021 10:11:32 +0000</pubDate>
      <guid>https://lifeislife.cn/posts/qemu%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-%E5%A4%96%E8%AE%BE%E6%A8%A1%E6%8B%9F%E4%BB%A5gpio%E4%B8%BA%E4%BE%8B/</guid>
      <description>QEMU 模拟外设的原理 QEMU 主要是实现了 CPU 核的模拟，可以读写某个地址。 QEMU 的模拟外设的原理很简单：硬件即内存。 要在 QEMU 上模拟某个外设，思路就是： CPU 读某个地</description>
    </item>
    <item>
      <title>QEMU 源码分析 - 虚拟外设创建</title>
      <link>https://lifeislife.cn/posts/qemu%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-%E8%99%9A%E6%8B%9F%E5%A4%96%E8%AE%BE%E5%88%9B%E5%BB%BA/</link>
      <pubDate>Tue, 09 Nov 2021 17:39:38 +0000</pubDate>
      <guid>https://lifeislife.cn/posts/qemu%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-%E8%99%9A%E6%8B%9F%E5%A4%96%E8%AE%BE%E5%88%9B%E5%BB%BA/</guid>
      <description>QOM 简介 QOM(QEMU Object Model) 是 QEMU 的一个模块，用于描述虚拟机的结构，包括虚拟机的 CPU、内存、硬盘、网络、输入输出设备等。QEMU 为了方便整个系统的构建，实现</description>
    </item>
    <item>
      <title>QEMU 源码分析-虚拟 CPU 创建</title>
      <link>https://lifeislife.cn/posts/qemu%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-%E8%99%9A%E6%8B%9Fcpu%E5%88%9B%E5%BB%BA/</link>
      <pubDate>Wed, 01 Sep 2021 18:22:14 +0000</pubDate>
      <guid>https://lifeislife.cn/posts/qemu%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-%E8%99%9A%E6%8B%9Fcpu%E5%88%9B%E5%BB%BA/</guid>
      <description>流程图 先开个头吧，把创建流程稍微捋一下，找到创建虚拟 CPU 的模块。至于中间的流程还没有详细分析，万事开头难，先上手再说吧。 qemu_add_op</description>
    </item>
    <item>
      <title>QEMU Decodetree详解</title>
      <link>https://lifeislife.cn/posts/qemu-decodetree%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://lifeislife.cn/posts/qemu-decodetree%E8%AF%A6%E8%A7%A3/</guid>
      <description>QEMU 在 decode 指令的时候，需要调用各平台所定义的 instruction decoders 来解析指令。如在 ARM 平台下，就定义了：disas_arm_insn()、disas_thumb_i</description>
    </item>
  </channel>
</rss>
