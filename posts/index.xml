<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on PaperMod</title>
    <link>//localhost:8888/posts/</link>
    <description>Recent content in Posts on PaperMod</description>
    <generator>Hugo -- 0.131.0</generator>
    <language>en</language>
    <lastBuildDate>Wed, 22 Dec 2021 09:16:25 +0000</lastBuildDate>
    <atom:link href="//localhost:8888/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>C 程序内存区域分配</title>
      <link>//localhost:8888/posts/c%E7%A8%8B%E5%BA%8F%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F%E5%88%86%E9%85%8D/</link>
      <pubDate>Wed, 22 Dec 2021 09:16:25 +0000</pubDate>
      <guid>//localhost:8888/posts/c%E7%A8%8B%E5%BA%8F%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F%E5%88%86%E9%85%8D/</guid>
      <description>内存区域划分 C 程序在执行时，将内存大致划分为以下几个区域：
代码区：存放函数体的二进制代码，由操作系统进行管理，通常是只读的。 全局区：存放全局变量和静态变量，程序结束后由系统释放。 栈区：存放函数的参数值、局部变量的值等，由编译器自动分配释放。 堆区：由程序员分配和释放，若程序员不释放，程序结束时由操作系统回收。 常量区：存放常量字符串，程序结束后由系统释放。 代码区：存放函数体的二进制代码，由操作系统进行管理，通常是只读的。 全局区：存放全局变量和静态变量，程序结束后由系统释放。 </description>
    </item>
    <item>
      <title>每天学命令-apt 安装卸载软件</title>
      <link>//localhost:8888/posts/%E6%AF%8F%E5%A4%A9%E5%AD%A6%E5%91%BD%E4%BB%A4-apt%E5%AE%89%E8%A3%85%E5%8D%B8%E8%BD%BD%E8%BD%AF%E4%BB%B6/</link>
      <pubDate>Thu, 12 Aug 2021 18:42:39 +0000</pubDate>
      <guid>//localhost:8888/posts/%E6%AF%8F%E5%A4%A9%E5%AD%A6%E5%91%BD%E4%BB%A4-apt%E5%AE%89%E8%A3%85%E5%8D%B8%E8%BD%BD%E8%BD%AF%E4%BB%B6/</guid>
      <description>这个命令应该是我们平时用的最多的命令之一了，应该早就拿出来讲一下的。但是平时用的太多，总感觉自己都会用了，但是仔细看了所有命令，还是有一些比较实用但是没记住的命令。
apt的全称是Advanced Packaging Tool是 Linux 系统下的一款安装包管理工具。APT 可以自动下载、配置和安装二进制或源代码格式软件包，简化了 Unix 系统上管理软件的过程。
APT 主要由以下几个命令组成：
apt-getapt-cacheapt-file Commands 搜索软件包 apt search python3 安装软件包 apt install python3 更新源 sudo apt install update 更新软件 执行完 update 命令后，就可以使用 apt upgrade 来升级软件包了。执行命令后系统会提示有几个软件需要升级。在得到你的同意后，系统即开始自动下载安装软件包。
sudo apt install upgrade 卸载软件 apt remove python3 # 移除软件包，但是保留配置文件apt purge python3 #移除软件包并移除配置apt autoremove # 移除孤立的并不被依赖的软件包 列出软件清单 apt list </description>
    </item>
  </channel>
</rss>
