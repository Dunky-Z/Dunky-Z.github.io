<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Qt on 夜云泊</title>
    <link>https://lifeislife.cn/tags/qt/</link>
    <description>Recent content in Qt on 夜云泊</description>
    <generator>Hugo -- 0.131.0</generator>
    <language>zh</language>
    <lastBuildDate>Fri, 18 Mar 2022 13:50:35 +0000</lastBuildDate>
    <atom:link href="https://lifeislife.cn/tags/qt/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Qt 编译后的程序放到指定目录，屏蔽 qDebug 输出</title>
      <link>https://lifeislife.cn/posts/qt%E7%BC%96%E8%AF%91%E5%90%8E%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%94%BE%E5%88%B0%E6%8C%87%E5%AE%9A%E7%9B%AE%E5%BD%95%E5%B1%8F%E8%94%BDqdebug%E8%BE%93%E5%87%BA/</link>
      <pubDate>Fri, 18 Mar 2022 13:50:35 +0000</pubDate>
      <guid>https://lifeislife.cn/posts/qt%E7%BC%96%E8%AF%91%E5%90%8E%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%94%BE%E5%88%B0%E6%8C%87%E5%AE%9A%E7%9B%AE%E5%BD%95%E5%B1%8F%E8%94%BDqdebug%E8%BE%93%E5%87%BA/</guid>
      <description>可执行程序放到指定目录 默认情况下 QtCreator 会将编译链接后的可执行程序与中间生成的文件防盗build-***-文件中，如何能将可执行文件生成在指定目录</description>
    </item>
    <item>
      <title>解决 Qt-QObject::connect: Cannot queue arguments of type‘QTextCursor’错误</title>
      <link>https://lifeislife.cn/posts/%E8%A7%A3%E5%86%B3qt-qobject-connect-cannot-queue-arguments-of-type-qtextcursor%E9%94%99%E8%AF%AF/</link>
      <pubDate>Sat, 04 Dec 2021 11:41:46 +0000</pubDate>
      <guid>https://lifeislife.cn/posts/%E8%A7%A3%E5%86%B3qt-qobject-connect-cannot-queue-arguments-of-type-qtextcursor%E9%94%99%E8%AF%AF/</guid>
      <description>保留现场 我在线程中直接调用了 QTextEdit 的 append 函数时，候就会出现下面的错误： QObject::connect: Cannot queue arguments of type &amp;#39;QTextCursor&amp;#39; (Make sure &amp;#39;QTextCursor&amp;#39; is registered using qRegisterMetaType().) 探究原因 原因是我们不能通过线程来修改 UI，较为安</description>
    </item>
    <item>
      <title>Qt 跨窗口，控件类传递数据</title>
      <link>https://lifeislife.cn/posts/qt%E8%B7%A8%E7%AA%97%E5%8F%A3%E6%8E%A7%E4%BB%B6%E7%B1%BB%E4%BC%A0%E9%80%92%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Thu, 02 Dec 2021 10:35:14 +0000</pubDate>
      <guid>https://lifeislife.cn/posts/qt%E8%B7%A8%E7%AA%97%E5%8F%A3%E6%8E%A7%E4%BB%B6%E7%B1%BB%E4%BC%A0%E9%80%92%E6%95%B0%E6%8D%AE/</guid>
      <description>问题简介 本文基于【Qt】窗体间传递数据（跨控件跨类），三种情况与处理方法 已知三个窗体，A 为 B C 的父控件，B 与 C 互为兄弟控件 那么参数传递分三种</description>
    </item>
    <item>
      <title>Clang-Format 格式化代码</title>
      <link>https://lifeislife.cn/posts/clang-format%E6%A0%BC%E5%BC%8F%E5%8C%96%E4%BB%A3%E7%A0%81/</link>
      <pubDate>Wed, 01 Dec 2021 17:42:45 +0000</pubDate>
      <guid>https://lifeislife.cn/posts/clang-format%E6%A0%BC%E5%BC%8F%E5%8C%96%E4%BB%A3%E7%A0%81/</guid>
      <description>安装 Linux sudo apt-get install clang-format windows 每每到这时候就越能感受到用 Linux 作为开发环境的优势，Windows 安装就稍显复杂了。 你可以选择安装完整的 LLVM，在bin目录可</description>
    </item>
    <item>
      <title>解决 QT 点击按钮无响应</title>
      <link>https://lifeislife.cn/posts/%E8%A7%A3%E5%86%B3qt%E7%82%B9%E5%87%BB%E6%8C%89%E9%92%AE%E6%97%A0%E5%93%8D%E5%BA%94/</link>
      <pubDate>Tue, 16 Nov 2021 17:42:47 +0000</pubDate>
      <guid>https://lifeislife.cn/posts/%E8%A7%A3%E5%86%B3qt%E7%82%B9%E5%87%BB%E6%8C%89%E9%92%AE%E6%97%A0%E5%93%8D%E5%BA%94/</guid>
      <description>保留现场 在运行中的界面上点击按钮没有效果，像是按钮上层有其他遮盖层。 探究原因 widget的父控件上又添加了其他Widget，覆盖在了按钮上，</description>
    </item>
    <item>
      <title>解决 QT 在构造函数中写的控件不显示的问题</title>
      <link>https://lifeislife.cn/posts/%E8%A7%A3%E5%86%B3qt%E5%9C%A8%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E4%B8%AD%E5%86%99%E7%9A%84%E6%8E%A7%E4%BB%B6%E4%B8%8D%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98/</link>
      <pubDate>Tue, 16 Nov 2021 16:15:26 +0000</pubDate>
      <guid>https://lifeislife.cn/posts/%E8%A7%A3%E5%86%B3qt%E5%9C%A8%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E4%B8%AD%E5%86%99%E7%9A%84%E6%8E%A7%E4%BB%B6%E4%B8%8D%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
      <description>保留现场 在新窗口中的构造函数中添加控件运行后却没有显示 探究原因 新建的工程师 MainWindow 子类工程，没有设置父窗口。 没有将控件的父窗口设置成自己定义的 wi</description>
    </item>
    <item>
      <title>QWidget 中 update 不执行 paintEvent</title>
      <link>https://lifeislife.cn/posts/%E8%A7%A3%E5%86%B3qwidget%E4%B8%ADupdate%E4%B8%8D%E6%89%A7%E8%A1%8Cpaintevent/</link>
      <pubDate>Mon, 15 Nov 2021 18:04:50 +0000</pubDate>
      <guid>https://lifeislife.cn/posts/%E8%A7%A3%E5%86%B3qwidget%E4%B8%ADupdate%E4%B8%8D%E6%89%A7%E8%A1%8Cpaintevent/</guid>
      <description>保留现场 手动执行update()或者repaint()都不能执行paintEvent函数。 探究原因 如果是代码new出来的控件，检查是否正确显</description>
    </item>
    <item>
      <title>QtCreator 快速添加注释模板</title>
      <link>https://lifeislife.cn/posts/qtcreator%E5%BF%AB%E9%80%9F%E6%B7%BB%E5%8A%A0%E6%B3%A8%E9%87%8A%E6%A8%A1%E6%9D%BF/</link>
      <pubDate>Tue, 28 Sep 2021 19:26:03 +0000</pubDate>
      <guid>https://lifeislife.cn/posts/qtcreator%E5%BF%AB%E9%80%9F%E6%B7%BB%E5%8A%A0%E6%B3%A8%E9%87%8A%E6%A8%A1%E6%9D%BF/</guid>
      <description>需求 通常函数的注释一般都比较长，而且每个函数注释都格式一致，例如下面的函数注释模板。如果每次写注释都要复制一遍比较麻烦，复制完还要删除多余的</description>
    </item>
    <item>
      <title>Qt 修改 UI 文件不生效</title>
      <link>https://lifeislife.cn/posts/qt%E4%BF%AE%E6%94%B9ui%E6%96%87%E4%BB%B6%E4%B8%8D%E7%94%9F%E6%95%88/</link>
      <pubDate>Sun, 26 Sep 2021 09:19:18 +0000</pubDate>
      <guid>https://lifeislife.cn/posts/qt%E4%BF%AE%E6%94%B9ui%E6%96%87%E4%BB%B6%E4%B8%8D%E7%94%9F%E6%95%88/</guid>
      <description>保留现场 修改了 UI 文件后，在代码中无法调用新增的内容。 探究原因 导致ui_*.h文件没有更新的原因是源代码中#include ui_*.h的位置和</description>
    </item>
    <item>
      <title>QtCreator 修改项目构建目录</title>
      <link>https://lifeislife.cn/posts/qtcreator%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA%E7%9B%AE%E5%BD%95/</link>
      <pubDate>Sat, 25 Sep 2021 19:17:46 +0000</pubDate>
      <guid>https://lifeislife.cn/posts/qtcreator%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA%E7%9B%AE%E5%BD%95/</guid>
      <description>保留现场 QtCreator 构建项目时，会在统计目录新建一个build-xxx-debug的目录，如果想要自己修改这个目录的位置，名称，该怎么办。 解决方法 仅修</description>
    </item>
    <item>
      <title>Qt 命令行带参数启动 Qt 程序</title>
      <link>https://lifeislife.cn/posts/qt%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B8%A6%E5%8F%82%E6%95%B0%E5%90%AF%E5%8A%A8qt%E7%A8%8B%E5%BA%8F/</link>
      <pubDate>Mon, 13 Sep 2021 12:03:44 +0000</pubDate>
      <guid>https://lifeislife.cn/posts/qt%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B8%A6%E5%8F%82%E6%95%B0%E5%90%AF%E5%8A%A8qt%E7%A8%8B%E5%BA%8F/</guid>
      <description>简介 我们经常用到命令行参数，比如最常见的 Linux 命令，显示所有文件ls -a,ls其实就是一个程序，-a就是该程序需要解析的一个参数。那么如何能让 Qt</description>
    </item>
    <item>
      <title>Qt 文件系统</title>
      <link>https://lifeislife.cn/posts/qt%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Tue, 31 Aug 2021 20:00:06 +0000</pubDate>
      <guid>https://lifeislife.cn/posts/qt%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/</guid>
      <description>Qt 通过QIODevice提供了对 I/O 设备的抽象，这些设备具有读写字节块的能力。下面是 I/O 设备的类图： 图中所涉及的类及其用途简要说明如下： QIOD</description>
    </item>
    <item>
      <title>Qt 绘制系统</title>
      <link>https://lifeislife.cn/posts/qt%E7%BB%98%E5%88%B6%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Fri, 27 Aug 2021 14:39:12 +0000</pubDate>
      <guid>https://lifeislife.cn/posts/qt%E7%BB%98%E5%88%B6%E7%B3%BB%E7%BB%9F/</guid>
      <description>本篇文章所涉及代码可在此处查看。 绘制系统简介 Qt 的绘图系统允许使用相同的 API 在屏幕和其它打印设备上进行绘制。整个绘图系统基于QPainter,Q</description>
    </item>
    <item>
      <title>Qt 模仿登录界面-页面反转效果</title>
      <link>https://lifeislife.cn/posts/qt%E6%A8%A1%E4%BB%BF%E7%99%BB%E5%BD%95%E7%95%8C%E9%9D%A2-%E9%A1%B5%E9%9D%A2%E5%8F%8D%E8%BD%AC%E6%95%88%E6%9E%9C/</link>
      <pubDate>Tue, 24 Aug 2021 13:55:37 +0000</pubDate>
      <guid>https://lifeislife.cn/posts/qt%E6%A8%A1%E4%BB%BF%E7%99%BB%E5%BD%95%E7%95%8C%E9%9D%A2-%E9%A1%B5%E9%9D%A2%E5%8F%8D%E8%BD%AC%E6%95%88%E6%9E%9C/</guid>
      <description>设置一个旋转效果，将登录界面旋转翻个面，设置一些网络参数。 效果 网络参数设置界面布局 网络参数设置界面 //loginnetsetwindow.cpp //初始化标题 void LoginNetSetWindow::initMyTitle() { m_titleBar-&amp;gt;move(0, 0); m_titleBar-&amp;gt;raise(); m_titleBar-&amp;gt;setBackgroundColor(0, 0, 0, true); m_titleBar-&amp;gt;setButtonType(MIN_BUTTON); m_titleBar-&amp;gt;setTitleWidth(this-&amp;gt;width()); m_titleBar-&amp;gt;setMoveParentWindowFlag(false);</description>
    </item>
    <item>
      <title>Qt 模仿登录界面-交互响应</title>
      <link>https://lifeislife.cn/posts/qt%E6%A8%A1%E4%BB%BF%E7%99%BB%E5%BD%95%E7%95%8C%E9%9D%A2-%E4%BA%A4%E4%BA%92%E5%93%8D%E5%BA%94/</link>
      <pubDate>Wed, 18 Aug 2021 13:07:01 +0000</pubDate>
      <guid>https://lifeislife.cn/posts/qt%E6%A8%A1%E4%BB%BF%E7%99%BB%E5%BD%95%E7%95%8C%E9%9D%A2-%E4%BA%A4%E4%BA%92%E5%93%8D%E5%BA%94/</guid>
      <description>效果预览 设置窗口拖动 因为这个项目中没有将登录界面直接继承MainWindow，而是继承的Dialog类，所以它是不能直接移动的，需要我们自己</description>
    </item>
    <item>
      <title>Qt 模仿登录界面-窗口布局及样式</title>
      <link>https://lifeislife.cn/posts/qt%E6%A8%A1%E4%BB%BF%E7%99%BB%E5%BD%95%E7%95%8C%E9%9D%A2-%E7%AA%97%E5%8F%A3%E5%B8%83%E5%B1%80%E5%8F%8A%E6%A0%B7%E5%BC%8F/</link>
      <pubDate>Tue, 17 Aug 2021 11:30:06 +0000</pubDate>
      <guid>https://lifeislife.cn/posts/qt%E6%A8%A1%E4%BB%BF%E7%99%BB%E5%BD%95%E7%95%8C%E9%9D%A2-%E7%AA%97%E5%8F%A3%E5%B8%83%E5%B1%80%E5%8F%8A%E6%A0%B7%E5%BC%8F/</guid>
      <description>框架类图 效果预览 完整项目及资源文件请在Github查看。 页面布局 初始化标题栏 // 初始化标题栏; void LoginWindow::initMyTitle() { // 因为这里有控件层叠了，所以要注意控件 raise() 方</description>
    </item>
    <item>
      <title>Qt 添加资源文件（QtCreator）</title>
      <link>https://lifeislife.cn/posts/qt%E6%B7%BB%E5%8A%A0%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6qtcreator/</link>
      <pubDate>Thu, 12 Aug 2021 10:23:58 +0000</pubDate>
      <guid>https://lifeislife.cn/posts/qt%E6%B7%BB%E5%8A%A0%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6qtcreator/</guid>
      <description>QtCreator➜新建文件或项目➜Qt➜Qt Resource File 点击Choose，设置资源文件名和路径。资源文件是一系列文件的集合，比如我要建立一个图片的</description>
    </item>
    <item>
      <title>Qt 事件</title>
      <link>https://lifeislife.cn/posts/qt%E4%BA%8B%E4%BB%B6/</link>
      <pubDate>Mon, 09 Aug 2021 09:55:07 +0000</pubDate>
      <guid>https://lifeislife.cn/posts/qt%E4%BA%8B%E4%BB%B6/</guid>
      <description>本篇文章所涉及代码可在此处查看 事件以及与信号的区别 事件（event）是由系统或者 Qt 本身在不同的时刻发出的。当用户按下鼠标、敲下键盘，或者是窗</description>
    </item>
    <item>
      <title>Qt 对话框</title>
      <link>https://lifeislife.cn/posts/qt%E5%AF%B9%E8%AF%9D%E6%A1%86/</link>
      <pubDate>Thu, 05 Aug 2021 10:11:33 +0000</pubDate>
      <guid>https://lifeislife.cn/posts/qt%E5%AF%B9%E8%AF%9D%E6%A1%86/</guid>
      <description>本篇文章所涉及代码，可在此处查看 Qt 中使用 QDialog 类实现对话框。就像主窗口一样，我们通常会设计一个类继承 QDialog。QDialog（及其子类，以</description>
    </item>
    <item>
      <title>Git 中添加 gitignore 并更新远程仓库</title>
      <link>https://lifeislife.cn/posts/git%E4%B8%AD%E6%B7%BB%E5%8A%A0gitignore%E5%B9%B6%E6%9B%B4%E6%96%B0%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93/</link>
      <pubDate>Wed, 04 Aug 2021 14:09:20 +0000</pubDate>
      <guid>https://lifeislife.cn/posts/git%E4%B8%AD%E6%B7%BB%E5%8A%A0gitignore%E5%B9%B6%E6%9B%B4%E6%96%B0%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93/</guid>
      <description>gitignore 的作用 在使用Git版本控制时，必须要用.gitignore这个文件来告诉Git那些文件或目录不需要添加到版本控制中。通俗点说，就是不需要g</description>
    </item>
    <item>
      <title>Qt 添加资源文件</title>
      <link>https://lifeislife.cn/posts/qt%E6%B7%BB%E5%8A%A0%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6/</link>
      <pubDate>Wed, 04 Aug 2021 11:34:10 +0000</pubDate>
      <guid>https://lifeislife.cn/posts/qt%E6%B7%BB%E5%8A%A0%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6/</guid>
      <description>本文是学习【Qt 学习之路】的学习笔记，源码非原创。Github同步本文更改的代码。 在建立 Qt 学习代码仓时，推送到远程的代码比较乱，所以用git</description>
    </item>
    <item>
      <title>Linux(Ubuntu) 环境下安装 Qt</title>
      <link>https://lifeislife.cn/posts/linux-ubuntu-%E7%8E%AF%E5%A2%83%E4%B8%8B%E5%AE%89%E8%A3%85qt/</link>
      <pubDate>Tue, 27 Jul 2021 16:34:50 +0000</pubDate>
      <guid>https://lifeislife.cn/posts/linux-ubuntu-%E7%8E%AF%E5%A2%83%E4%B8%8B%E5%AE%89%E8%A3%85qt/</guid>
      <description>真蠢，之前费那么大劲，只要一句命令就完事了 下载安装 sudo apt install qtcreator 但是在用命令行构建 project 时可能会报错 qmake -project could not find a Qt installation of &amp;#39;&amp;#39; 这时候需要 sudo apt-get install qt5-default 好了可以愉快</description>
    </item>
  </channel>
</rss>
