<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>OpenSBI on PaperMod</title>
    <link>http://localhost:8888/tags/opensbi/</link>
    <description>Recent content in OpenSBI on PaperMod</description>
    <generator>Hugo -- 0.131.0</generator>
    <language>en</language>
    <lastBuildDate>Sun, 20 Nov 2022 15:11:57 +0000</lastBuildDate>
    <atom:link href="http://localhost:8888/tags/opensbi/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>手把手教你向开源社区提 Patch</title>
      <link>http://localhost:8888/posts/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E5%90%91%E5%BC%80%E6%BA%90%E7%A4%BE%E5%8C%BA%E6%8F%90patch/</link>
      <pubDate>Sun, 20 Nov 2022 15:11:57 +0000</pubDate>
      <guid>http://localhost:8888/posts/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E5%90%91%E5%BC%80%E6%BA%90%E7%A4%BE%E5%8C%BA%E6%8F%90patch/</guid>
      <description>提交补丁的最佳实践 本文翻译自官方教程Git - MyFirstContribution，原文包含开发到提交的整个周期。但是想要提交的人应该都已经开发完代码了，所以本文用自己的实际例子重新写了一遍，省去了开发代码等流程，重点介绍如何使用 git send-email。
环境准备 下载 OpenSBI 仓库 git clone https://github.com/riscv-software-src/opensbi.git cd opensbi 安装依赖 要从源代码构建 OpenSBI：
make 注：OpenSBI 的构建是可并行的。上面的命令可以添加-j#参数，如-j12。
确认要解决的问题 在本文档中，我们将模拟提交一个简单的 Patch，.gitignore文件可以过滤不必要的文件，现在使用 VSCode 的用户越来越多，使用 VSCode 开发时常常会生成.vscode目录，但是这些文件不该被推送至远程，原仓库中的.gitignore文件中没有过滤该文件，我们给他加上。
为了能够模拟一次发送多个commit的场景，我们将再添加一个.so用来过滤编译过程中生成的.so文件。
建立工作空间 让我们先建立一个开发分支来进行我们的修改。
git checkout -b update_gitignore origin/master 我们将在这里做一些提交，以演示如何将一个带有多个补丁的主题同时送审。
实现代码 过滤 .vscode 打开文件.gitignore，为该文件添加/.vscode/：
# Object files *.o *.a *.dep #Build &amp;amp; install directories build/ install/ # Development friendly files tags cscope* /.vscode/ 为以上修改做一次提交：
$ git status On branch update_gitignore Your branch is up to date with &amp;#39;origin/master&amp;#39;.</description>
    </item>
  </channel>
</rss>
