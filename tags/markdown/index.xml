<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Markdown on PaperMod</title>
    <link>http://localhost:8888/tags/markdown/</link>
    <description>Recent content in Markdown on PaperMod</description>
    <generator>Hugo -- 0.131.0</generator>
    <language>en</language>
    <lastBuildDate>Fri, 01 Sep 2023 20:25:05 +0000</lastBuildDate>
    <atom:link href="http://localhost:8888/tags/markdown/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>解决复制 Markdown 文本到思源笔记无法转义为 Markdown 格式</title>
      <link>http://localhost:8888/posts/%E8%A7%A3%E5%86%B3%E5%A4%8D%E5%88%B6markdown%E6%96%87%E6%9C%AC%E5%88%B0%E6%80%9D%E6%BA%90%E7%AC%94%E8%AE%B0%E6%97%A0%E6%B3%95%E8%BD%AC%E4%B9%89%E4%B8%BAmarkdown%E6%A0%BC%E5%BC%8F/</link>
      <pubDate>Fri, 01 Sep 2023 20:25:05 +0000</pubDate>
      <guid>http://localhost:8888/posts/%E8%A7%A3%E5%86%B3%E5%A4%8D%E5%88%B6markdown%E6%96%87%E6%9C%AC%E5%88%B0%E6%80%9D%E6%BA%90%E7%AC%94%E8%AE%B0%E6%97%A0%E6%B3%95%E8%BD%AC%E4%B9%89%E4%B8%BAmarkdown%E6%A0%BC%E5%BC%8F/</guid>
      <description>问题描述 在 VSCode 中编辑 Markdown 文本，复制到思源笔记后，思源笔记无法转义为 Markdown 格式。会变成一个代码块，但是代码块内的内容并不是复制的内容。
比如上面这段话复制到思源笔记成了下图这样：
但是我需要的是能够转义为 Markdown 的阅读模式。
解决方法 问题的原因在于 VSCode 复制的文本是带格式的，而思源笔记默认的粘贴模式是纯文本模式，所以会出现上面的问题。
解决方法就是从 VSCode 复制的内容为纯文本，一种可以把文本复制到 txt 文件中，再复制，但是比较麻烦。
第二种方法是使用 VSCode 的插件 Copy Plain Text，搜索下载后，默认快捷键为 Ctrl+Alt+C，可以复制为纯文本。
再次粘贴到思源笔记中，就可以转义为 Markdown 格式了。</description>
    </item>
    <item>
      <title>解决 Pandoc 将 MD 转换为 PDF 时报错 (error)\tightlist</title>
      <link>http://localhost:8888/posts/%E8%A7%A3%E5%86%B3pandoc%E5%B0%86md%E8%BD%AC%E6%8D%A2%E4%B8%BApdf%E6%97%B6%E6%8A%A5%E9%94%99-error-tightlist/</link>
      <pubDate>Sat, 24 Sep 2022 17:27:00 +0000</pubDate>
      <guid>http://localhost:8888/posts/%E8%A7%A3%E5%86%B3pandoc%E5%B0%86md%E8%BD%AC%E6%8D%A2%E4%B8%BApdf%E6%97%B6%E6%8A%A5%E9%94%99-error-tightlist/</guid>
      <description>使用 Pandoc 将test.md转换位 PDF 时，出现如下错误：
! Undefined control sequence. &amp;lt;recently read&amp;gt; \tightlist l.213 \end{frame} pandoc: Error producing PDF from TeX source make: *** [test.pdf] Error 43 这是因为在 Markdown 文件中使用-表示无序列表，被转化成了\tightlist但是 Pandoc 版本太老，不支持这个命令。（严格来说是 Pandoc 没有处理这个 LaTeX 命令，不是不支持，因为这是 LaTeX 命令和 Pandoc 没关系）。
有两种方式解决，一是升级 Pandoc 版本，二是将处理\tightlist的命令加到自己使用的模板中。
\providecommand{\tightlist}{% \setlength{\itemsep}{0pt}\setlength{\parskip}{0pt}} 或者
\def\tightlist{} </description>
    </item>
    <item>
      <title>Markdown 语法简明教程</title>
      <link>http://localhost:8888/posts/markdown%E8%AF%AD%E6%B3%95%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/</link>
      <pubDate>Sat, 24 Sep 2022 15:05:12 +0000</pubDate>
      <guid>http://localhost:8888/posts/markdown%E8%AF%AD%E6%B3%95%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/</guid>
      <description>Markdown 简介 Markdown 是什么？ Markdown是一种轻量级标记语言，它以纯文本形式 (易读、易写、易更改) 编写文档，并最终以 HTML 格式发布。
Markdown也可以理解为将以 Markdown 语法编写的语言转换成 HTML 内容的工具。
谁创造了它？ 它由Aaron Swartz和John共同设计，Aaron Swartz就是那位于去年（2013 年 1 月 11 日）自杀，有着开挂一般人生经历的程序员。维基百科对他的介绍是：软件工程师、作家、政治组织者、互联网活动家、维基百科人。
14 岁参与 RSS 1.0 规格标准的制订。 2004年入读斯坦福，之后退学。 2005年创建Infogami，之后与Reddit合并成为其合伙人。 2010年创立求进会（Demand Progress），积极参与禁止网络盗版法案（SOPA）活动，最终该提案被撤回。 2011年 7 月 19 日，因被控从 MIT 和 JSTOR 下载 480 万篇学术论文并以免费形式上传于网络被捕。 2013年 1 月自杀身亡。 为什么要使用它？ 它是易读（看起来舒服）、易写（语法简单）、易更改纯文本。处处体现着极简主义的影子。 兼容 HTML，可以转换为 HTML 格式发布。 跨平台使用。 越来越多的网站支持 Markdown。 更方便清晰地组织你的电子邮件。（Markdown-here, Airmail） 摆脱 Word 怎么使用？ 如果不算扩展，Markdown 的语法绝对简单到让你爱不释手。
Markdown 语法主要分为如下几大部分：
标题，段落，区块引用，代码区块，强调，列表，分割线，链接，图片，反斜杠 \，符号&amp;rsquo;`&amp;rsquo;。
谁在用？ Markdown 的使用者：
GitHub 简书 Stack Overflow Apollo Moodle Reddit 等等 语法介绍 标题 两种形式：</description>
    </item>
    <item>
      <title>Markdown 表格竖线自动对齐</title>
      <link>http://localhost:8888/posts/markdown%E8%A1%A8%E6%A0%BC%E7%AB%96%E7%BA%BF%E8%87%AA%E5%8A%A8%E5%AF%B9%E9%BD%90/</link>
      <pubDate>Sat, 24 Sep 2022 15:01:41 +0000</pubDate>
      <guid>http://localhost:8888/posts/markdown%E8%A1%A8%E6%A0%BC%E7%AB%96%E7%BA%BF%E8%87%AA%E5%8A%A8%E5%AF%B9%E9%BD%90/</guid>
      <description>需求背景 Markdown 中的表格，只要符合语法就能够正常渲染显示，但是符合语法但是 Markdown 源码却不一定易读。就如以下的这个表格，可以正常显示，但是源码在源文件中竖线不对齐，就阅读困难。
源码：
|诗名|作者|朝代| |-|-|-| |白头吟|卓文君|两汉| |锦瑟|李商隐|唐代| |登科后|孟郊|唐代| 显示效果：
诗名 作者 朝代 白头吟 卓文君 两汉 锦瑟 李商隐 唐代 登科后 孟郊 唐代 我们可以手动将其竖线对齐，如下这样就易读许多：
| 诗名 | 作者 | 朝代 | | ------ | ------ | ---- | | 白头吟 | 卓文君 | 两汉 | | 锦瑟 | 李商隐 | 唐代 | | 登科后 | 孟郊 | 唐代 | 显示效果保持一致。但是如果一个字符一个字符去手动对齐效率太低，也不符合 Markdown 设计初衷。这就用到了额外的插件，能够辅助我们完成这个工作。
Markdown All in One VSCode 插件中心搜索Markdown All in One安装。</description>
    </item>
    <item>
      <title>使用 Markdownlint 对 Markdown 文本格式检查</title>
      <link>http://localhost:8888/posts/%E4%BD%BF%E7%94%A8markdownlint%E5%AF%B9markdown%E6%96%87%E6%9C%AC%E6%A0%BC%E5%BC%8F%E6%A3%80%E6%9F%A5/</link>
      <pubDate>Sat, 17 Sep 2022 11:07:10 +0000</pubDate>
      <guid>http://localhost:8888/posts/%E4%BD%BF%E7%94%A8markdownlint%E5%AF%B9markdown%E6%96%87%E6%9C%AC%E6%A0%BC%E5%BC%8F%E6%A3%80%E6%9F%A5/</guid>
      <description>Markdownlint 简介 Markdown 标记语言旨在易于阅读、编写和理解。它的灵活性既是优点也是缺点。语法众多，因此格式可能不一致。某些构造在所有解析器中都不能很好地工作，应该避免。CommonMark 规范标准化解析器。
Markdownlint 是一个用于 Node.js 的静态分析工具，有一个标准规范，用于强制执行 Markdown 文件的标准和一致性。
Markdownlint 插件使用 markdownlint提供了多种使用场景下的解决方案，如命令行，编辑器甚至 GitHub Action。因为我平时写 Markdown 文档都是使用 VSCode，所以介绍一下 VSCode 下的使用。其他编辑器包括 VIM，Sublime 也都支持，可以前往官网查阅方法。
VSCode 需要下载插件，Ctrl+Shift+X打开插件中心，搜索Markdownlint安装即可。
安装插件后打开 Markdown 文档，如果有不符合规范的语法将会警告标识。如，标题前后没有空行，将会标识：
提示违反了第 22 条规范，第 22 条规范的就是标题前后需要有空行隔开。
目前有 53 条规范，可以在markdownlint/Rules.md查看所有规范的内容。
当然这些规范也都可以自定义是否检查，比如第 24 条规定，文档内不可以有重复的标题，但是我就有重复标题的需求，那该如何关闭这个检查呢，Markdownlint 提供了配置的方式。
Ctrl+Shift+P打开运行窗口，输入 Markdownlint，找到Creat or open the markdownlint configuration file。
创建一个配置文件，并输入以下内容，表示关闭第 24 条规范的检查：
{ &amp;#34;MD024&amp;#34;: false, } 这样文档中将不会有第 24 条规范的检查警告，其他检查同理。
Markdownlint 自定义规则 MD001 - Heading levels should only increment by one level at a time 标题等级一次只能增加一级，不能跨级。</description>
    </item>
    <item>
      <title>解决 Unable to 加载 picture or PDF file</title>
      <link>http://localhost:8888/posts/%E8%A7%A3%E5%86%B3unable-to-load-picture-or-pdf-file/</link>
      <pubDate>Fri, 26 Aug 2022 19:22:24 +0000</pubDate>
      <guid>http://localhost:8888/posts/%E8%A7%A3%E5%86%B3unable-to-load-picture-or-pdf-file/</guid>
      <description>保留现场 Unable to load picture or PDF file &amp;#39;xxxxxx&amp;#39; &amp;lt;to be read again&amp;gt; xxxx 探究原因 图片链接错误，转换 PDF 过程中会先下载所有图片到AppData/Local/Temp/tex2pdf.****文件夹里，因为无法正常下载图片，所有报错。检查图片链接是否有效。
解决方法 检查图片链接是否有效。</description>
    </item>
    <item>
      <title>Markdown 书写 PDF 输出优雅的解决方案</title>
      <link>http://localhost:8888/posts/markdown%E4%B9%A6%E5%86%99pdf%E8%BE%93%E5%87%BA%E4%BC%98%E9%9B%85%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link>
      <pubDate>Sat, 20 Aug 2022 08:28:03 +0000</pubDate>
      <guid>http://localhost:8888/posts/markdown%E4%B9%A6%E5%86%99pdf%E8%BE%93%E5%87%BA%E4%BC%98%E9%9B%85%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</guid>
      <description>折腾背景 Markdown 的简便性是 LaTeX 无法替代的，LaTeX 对排版的精准控制能力又是 Markdown 无法比拟的。一直在寻找一种能够将 Markdown 优雅地转换成 PDF 的解决方案，虽然早就听说也使用过 Pandoc 这把瑞士军刀，但是它太过强大，以致于一直都没用明白。只会简单的转换命令，但是实际效果并不好，最近学会了使用 LaTeX 模板的功能，这才让我眼前一亮，这才是我想要的结果。
效果演示 基础环境配置 Markdown 生成 PDF 主要需要使用 Pandoc 和 LaTeX 两个工具，具体安装方式如下：
Pandoc 的安装 Pandoc 是由 John MacFarlane 开发的标记语言转换工具，可实现不同标记语言间的格式转换。
Windows 下的安装：
下载安装包直接安装即可 如果安装了 Chocolate：choco install pandoc 如果安装了 winget：winget install pandoc Linux/FreeBSD下的安装：
Pandoc 已经包含在大部分 Linux 发行版的官方仓库中，直接使用诸如apt/dnf/yum/pacman之类的安装工具直接安装即可 macOS 下的安装：
brew install pandoc 详细的安装说明参见：官方安装文档
LaTeX 的安装 LaTeX 工具，建议安装 texlive。
Windows 下的安装： 参考该文章下载完整 texlive，注意安装后需要再安装 cjk，cjk-fonts 等相关 package Linux/FreeBSD下的安装： 使用 apt/dnf/yum/pacman/pkg 等安装工具安装 texlive、texlive-latex 等相关软件包 macOS 下的安装： 使用 HomeBrew 安装 texlive 即可 模板配置 配置 Pandoc 模板 为保证生成的 pdf 格式（自动插入封面、目录页、页眉页脚等信息），在本地环境中安装模板，具体步骤是：</description>
    </item>
    <item>
      <title>替换 Gitee 图床为腾讯云 COS</title>
      <link>http://localhost:8888/posts/%E6%9B%BF%E6%8D%A2gitee%E5%9B%BE%E5%BA%8A%E4%B8%BA%E8%85%BE%E8%AE%AF%E4%BA%91cos/</link>
      <pubDate>Sat, 09 Apr 2022 16:43:08 +0000</pubDate>
      <guid>http://localhost:8888/posts/%E6%9B%BF%E6%8D%A2gitee%E5%9B%BE%E5%BA%8A%E4%B8%BA%E8%85%BE%E8%AE%AF%E4%BA%91cos/</guid>
      <description>Gitee 图床挂了，但是各大云服务厂商提供的对象存储服务免费额度，对于个人小博客来说也够用了。下面介绍如何将图床更换为腾讯云 COS。
下载原有图片 从gitee下载整个仓库。保持原有目录结构。
配置腾讯云 COS 注册腾讯云账号，创建 COS 存储桶，选择公有读私有写。创建 COS 存储桶地址：https://console.cloud.tencent.com/cos，创建存储桶后可以在存储桶里打开防盗链设置。
创建桶&amp;ndash;选择地域&amp;ndash;填写名称&amp;ndash;选择公有读私有写&amp;ndash;点击创建。
如果忘了设置读写权限可以按一下方法设置； 选择菜单&amp;ndash;文件列表。上传下载好的文件夹（整个仓库的文件夹）。鼠标放到选择文件出现上传文件夹选项，或者将文件夹拖入浏览器。
配置 Picgo COS 版本：V5 设定 Secreid，设定 Secrekey，设定 APPID： APPID、SecretID 与 SecretKey 点此直达获取。 选择继续使用&amp;ndash;创建秘钥。
设定存储空间名，设定存储区域： 点此获取存储空间名以及存储区域。桶名称即存储空间名，所属区域：ap-shanghai即确认存储区域。
指定存储区域： 指定上传到 COS 的目录，比如我原先从gitee下载来的图床的仓库名是markdown_picbed，图片又保存在markdown_picbed/img目录下，那么就指定markdown_picbed/img目录。
替换旧图床 URL VSCode 全局替换：</description>
    </item>
  </channel>
</rss>
