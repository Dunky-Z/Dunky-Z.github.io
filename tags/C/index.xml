<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>C on PaperMod</title>
    <link>http://localhost:8888/tags/c/</link>
    <description>Recent content in C on PaperMod</description>
    <generator>Hugo -- 0.131.0</generator>
    <language>en</language>
    <lastBuildDate>Wed, 22 Dec 2021 09:16:25 +0000</lastBuildDate>
    <atom:link href="http://localhost:8888/tags/c/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>C 程序内存区域分配</title>
      <link>http://localhost:8888/posts/c%E7%A8%8B%E5%BA%8F%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F%E5%88%86%E9%85%8D/</link>
      <pubDate>Wed, 22 Dec 2021 09:16:25 +0000</pubDate>
      <guid>http://localhost:8888/posts/c%E7%A8%8B%E5%BA%8F%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F%E5%88%86%E9%85%8D/</guid>
      <description>内存区域划分 C 程序在执行时，将内存大致划分为以下几个区域：
代码区：存放函数体的二进制代码，由操作系统进行管理，通常是只读的。 全局区：存放全局变量和静态变量，程序结束后由系统释放。 栈区：存放函数的参数值、局部变量的值等，由编译器自动分配释放。 堆区：由程序员分配和释放，若程序员不释放，程序结束时由操作系统回收。 常量区：存放常量字符串，程序结束后由系统释放。 代码区：存放函数体的二进制代码，由操作系统进行管理，通常是只读的。 全局区：存放全局变量和静态变量，程序结束后由系统释放。 </description>
    </item>
  </channel>
</rss>
