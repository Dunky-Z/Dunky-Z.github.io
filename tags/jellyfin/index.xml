<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Jellyfin on 夜云泊</title>
    <link>https://lifeislife.cn/tags/jellyfin/</link>
    <description>Recent content in Jellyfin on 夜云泊</description>
    <generator>Hugo -- 0.133.1</generator>
    <language>zh</language>
    <lastBuildDate>Mon, 01 Aug 2022 23:05:52 +0000</lastBuildDate>
    <atom:link href="https://lifeislife.cn/tags/jellyfin/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Jellyfin 打造本地影音库</title>
      <link>https://lifeislife.cn/posts/jellyfin%E6%89%93%E9%80%A0%E6%9C%AC%E5%9C%B0%E5%BD%B1%E9%9F%B3%E5%BA%93/</link>
      <pubDate>Mon, 01 Aug 2022 23:05:52 +0000</pubDate>
      <guid>https://lifeislife.cn/posts/jellyfin%E6%89%93%E9%80%A0%E6%9C%AC%E5%9C%B0%E5%BD%B1%E9%9F%B3%E5%BA%93/</guid>
      <description>Docker 启动 version: &amp;#34;3.7&amp;#34; services: jellyfin: image: dockerproxy.com/linuxserver/jellyfin:latest container_name: jellyfin hostname: RISCX environment: - PUID=1000 - PGID=1000 - TZ=Asia/Shanghai - HTTP_PROXY:&amp;#39;http://192.168.1.9:7890&amp;#39; - HTTPS_PROXY:&amp;#39;http://192.168.1.9:7890&amp;#39; volumes: - /root/sharedfolder/appdata/jellyfin/config:/config - /root/sharedfolder/media:/media - /root/sharedfolder/appdata/jellyfin/cache:/cache devices: - /dev/dri:/dev/dri extra_hosts: - &amp;#34;api.themoviedb.org:108.138.246.55&amp;#34; - &amp;#34;image.themoviedb.org:104.16.61.155&amp;#34; - &amp;#34;www.36dm.com:104.21.80.200&amp;#34; network_mode: &amp;#34;host&amp;#34; restart: unless-stopped 初始化配置 就不挨个贴图了，建议将页面都设置为中文，</description>
      <content:encoded><![CDATA[<h1 id="docker-启动">Docker 启动</h1>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yml" data-lang="yml"><span class="line"><span class="cl"><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;3.7&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">services</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">jellyfin</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">dockerproxy.com/linuxserver/jellyfin:latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">jellyfin</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">hostname</span><span class="p">:</span><span class="w"> </span><span class="l">RISCX</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">PUID=1000</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">PGID=1000</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">TZ=Asia/Shanghai  </span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">HTTP_PROXY:&#39;http://192.168.1.9:7890&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">HTTPS_PROXY:&#39;http://192.168.1.9:7890&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">volumes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">/root/sharedfolder/appdata/jellyfin/config:/config</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">/root/sharedfolder/media:/media</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">/root/sharedfolder/appdata/jellyfin/cache:/cache</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">devices</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">/dev/dri:/dev/dri</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">extra_hosts</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="s2">&#34;api.themoviedb.org:108.138.246.55&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="s2">&#34;image.themoviedb.org:104.16.61.155&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="s2">&#34;www.36dm.com:104.21.80.200&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">network_mode</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;host&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">restart</span><span class="p">:</span><span class="w"> </span><span class="l">unless-stopped</span><span class="w">
</span></span></span></code></pre></div><h1 id="初始化配置">初始化配置</h1>
<p>就不挨个贴图了，建议将页面都设置为中文，有一点需要注意的是<strong>选择国家</strong>的时候，<strong>中国的英文全称是 People&rsquo;s Republic of China</strong>，不是 China，需要仔细找一下。</p>
<h1 id="转码配置">转码配置</h1>
<p>主要配置硬解码，这样可以大大降低 CPU 的使用率，提高播放的流畅度。能够开启硬解需要 GPU 支持，如果 CPU 有核显，那么就可以开启硬解，如果没有，那么就算了吧，跳过。也可以通过下面的命令查看是否支持硬解。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">cat /proc/cpuinfo <span class="p">|</span> grep <span class="s2">&#34;flags&#34;</span>
</span></span></code></pre></div><p>该命令将输出 CPU 的系统信息，并在输出结果中搜索&quot;flags&quot;（标志）行。如果该行中包含&quot;vme&quot;、&ldquo;cmov&rdquo;、&ldquo;cx8&rdquo;、&ldquo;mmx&rdquo;、&ldquo;sse&rdquo;、&ldquo;sse2&rdquo;、&ldquo;sse3&rdquo;、&ldquo;ssse3&rdquo;、&ldquo;sse4_1&rdquo;、&ldquo;sse4_2&rdquo;、&ldquo;avx&quot;等关键词，则说明该 CPU 支持视频硬解码。</p>
<p><img loading="lazy" src="https://picbed-1311007548.cos.ap-shanghai.myqcloud.com/markdown_picbed/img//2023/08/19/5bf1762d91906c0e2625b88b58c48c0b.png" alt=""  />

<div class="post-img-view">
<a data-fancybox="gallery" href="https://picbed-1311007548.cos.ap-shanghai.myqcloud.com/markdown_picbed/img//2023/08/19/5bf1762d91906c0e2625b88b58c48c0b.png">
<img src="https://picbed-1311007548.cos.ap-shanghai.myqcloud.com/markdown_picbed/img//2023/08/19/5bf1762d91906c0e2625b88b58c48c0b.png" alt=""  />
</a>
</div>

</p>
<p><img loading="lazy" src="https://picbed-1311007548.cos.ap-shanghai.myqcloud.com/markdown_picbed/img//2023/08/19/9ed326ab2f6bedd1141381e0593b45e7.png" alt=""  />

<div class="post-img-view">
<a data-fancybox="gallery" href="https://picbed-1311007548.cos.ap-shanghai.myqcloud.com/markdown_picbed/img//2023/08/19/9ed326ab2f6bedd1141381e0593b45e7.png">
<img src="https://picbed-1311007548.cos.ap-shanghai.myqcloud.com/markdown_picbed/img//2023/08/19/9ed326ab2f6bedd1141381e0593b45e7.png" alt=""  />
</a>
</div>

</p>
<h1 id="调用potplayer本地解码">调用Potplayer本地解码</h1>
<p>使用下面这个插件可以实现调用本地播放器播放视频，这样就可以使用 Potplayer 等播放器进行播放，而不是使用 Jellyfin 的内置播放器。文档写的十分详细，在这里就不再赘述了。</p>
<p><a href="https://github.com/kjtsune/embyToLocalPlayer?tab=readme-ov-file">kjtsune/embyToLocalPlayer: Emby/Jellyfin 调用外部本地播放器，并回传播放记录。适配 Plex。</a></p>
<h1 id="插件配置">插件配置</h1>
<p>所有插件都可以通过以下路径配置，后续不再赘述。所有地址都加上了代理地址<code>https://mirror.ghproxy.com</code>，请不要删掉，否则目录中的插件将无法加载。</p>
<p>管理页面 -&gt; 插件 -&gt; 存储库 -&gt; 添加存储库 -&gt; 输入manifest.json地址 -&gt; 确定</p>
<p><img loading="lazy" src="https://picbed-1311007548.cos.ap-shanghai.myqcloud.com/markdown_picbed/img/%2F2024%2F04%2F06%2Fe329545e57ff14c1349aa55f5c7e78e4.png" alt=""  />

<div class="post-img-view">
<a data-fancybox="gallery" href="https://picbed-1311007548.cos.ap-shanghai.myqcloud.com/markdown_picbed/img/%2F2024%2F04%2F06%2Fe329545e57ff14c1349aa55f5c7e78e4.png">
<img src="https://picbed-1311007548.cos.ap-shanghai.myqcloud.com/markdown_picbed/img/%2F2024%2F04%2F06%2Fe329545e57ff14c1349aa55f5c7e78e4.png" alt=""  />
</a>
</div>

</p>
<p>在目录中找到刚刚添加的插件，点击安装即可。</p>
<h2 id="更换皮肤">更换皮肤</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">https://mirror.ghproxy.com/https://raw.githubusercontent.com/danieladov/JellyfinPluginManifest/master/manifest.json
</span></span></code></pre></div><p><img loading="lazy" src="https://picbed-1311007548.cos.ap-shanghai.myqcloud.com/markdown_picbed/img/%2F2024%2F04%2F06%2F120302eea7c878815640200d4c29573f.png" alt=""  />

<div class="post-img-view">
<a data-fancybox="gallery" href="https://picbed-1311007548.cos.ap-shanghai.myqcloud.com/markdown_picbed/img/%2F2024%2F04%2F06%2F120302eea7c878815640200d4c29573f.png">
<img src="https://picbed-1311007548.cos.ap-shanghai.myqcloud.com/markdown_picbed/img/%2F2024%2F04%2F06%2F120302eea7c878815640200d4c29573f.png" alt=""  />
</a>
</div>

</p>
<p><img loading="lazy" src="https://picbed-1311007548.cos.ap-shanghai.myqcloud.com/markdown_picbed/img/%2F2024%2F04%2F06%2F01c537533cfbfb4ff93f6f9395a6a4b8.png" alt=""  />

<div class="post-img-view">
<a data-fancybox="gallery" href="https://picbed-1311007548.cos.ap-shanghai.myqcloud.com/markdown_picbed/img/%2F2024%2F04%2F06%2F01c537533cfbfb4ff93f6f9395a6a4b8.png">
<img src="https://picbed-1311007548.cos.ap-shanghai.myqcloud.com/markdown_picbed/img/%2F2024%2F04%2F06%2F01c537533cfbfb4ff93f6f9395a6a4b8.png" alt=""  />
</a>
</div>

</p>
<p><img loading="lazy" src="https://picbed-1311007548.cos.ap-shanghai.myqcloud.com/markdown_picbed/img/%2F2024%2F04%2F06%2Fcc258498b33fae88417c9f799eee8fd0.png" alt=""  />

<div class="post-img-view">
<a data-fancybox="gallery" href="https://picbed-1311007548.cos.ap-shanghai.myqcloud.com/markdown_picbed/img/%2F2024%2F04%2F06%2Fcc258498b33fae88417c9f799eee8fd0.png">
<img src="https://picbed-1311007548.cos.ap-shanghai.myqcloud.com/markdown_picbed/img/%2F2024%2F04%2F06%2Fcc258498b33fae88417c9f799eee8fd0.png" alt=""  />
</a>
</div>

</p>
<p><img loading="lazy" src="https://picbed-1311007548.cos.ap-shanghai.myqcloud.com/markdown_picbed/img/%2F2024%2F04%2F06%2F2bf546c7d3ede6e0815ad88451600227.png" alt=""  />

<div class="post-img-view">
<a data-fancybox="gallery" href="https://picbed-1311007548.cos.ap-shanghai.myqcloud.com/markdown_picbed/img/%2F2024%2F04%2F06%2F2bf546c7d3ede6e0815ad88451600227.png">
<img src="https://picbed-1311007548.cos.ap-shanghai.myqcloud.com/markdown_picbed/img/%2F2024%2F04%2F06%2F2bf546c7d3ede6e0815ad88451600227.png" alt=""  />
</a>
</div>

</p>
<h2 id="字幕刮削">字幕刮削</h2>
<h3 id="弹幕刮削-danmu">弹幕刮削 Danmu</h3>
<p>支持下载哔站，爱奇艺，腾讯，优酷，等视频的弹幕。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">https://mirror.ghproxy.com/https://github.com/cxfksword/jellyfin-plugin-danmu/releases/download/manifest/manifest_cn.json
</span></span></code></pre></div><h3 id="字幕刮削-opensubtitles">字幕刮削 OpenSubtitles</h3>
<p>OpenSubtitles 没找到 manifest.json 地址，需要下载插件，然后上传到 Jellyfin 中安装。<a href="https://github.com/jellyfin/jellyfin-plugin-opensubtitles">jellyfin/jellyfin-plugin-opensubtitles</a></p>
<p><a href="https://www.opensubtitles.com/zh-CN/home">Home | opensubtitles.com</a>注册账号，生成 API Key，然后在插件中配置即可。</p>
<h2 id="元数据">元数据</h2>
<h3 id="剧集重命名">剧集重命名</h3>
<p><a href="https://github.com/Nriver/Episode-ReName">Nriver/Episode-ReName: 电视剧/番剧自动化重命名工具, 一键批量改名. 可配合QBittorrent下载后自动重命名, 方便Emby自动刮削. 支持Windows, Linux, MacOS, Docker 和 群晖套件环境运行</a></p>
<h3 id="常规刮削-metashark">常规刮削 Metashark</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">https://mirror.ghproxy.com/https://github.com/cxfksword/jellyfin-plugin-metashark/releases/download/manifest/manifest_cn.json
</span></span></code></pre></div><h3 id="小日子刮削-metatube">小日子刮削 Metatube</h3>
<p>部署后端服务，然后在插件中配置后端地址即可。这里比较关键的是需要配置代理，并且代理需要通过WebUI设置<code>允许来自局域网的连接</code>，否则无法获取到数据。请参考这篇文章<a href="https://lifeislife.cn/2022/09/10/Linux%E4%B8%8B%E4%BD%BF%E7%94%A8Clash%E4%BD%9C%E4%BB%A3%E7%90%86%E5%B9%B6%E9%85%8D%E7%BD%AE%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8/">Linux 下使用 Clash 作代理并配置开机启动 | 夜云泊个人博客</a>。代理协议最好选择socks5。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="w">  </span><span class="nt">metatube</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">metatube/metatube-server:latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">metatube</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">ports</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="m">8180</span><span class="p">:</span><span class="m">8080</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">restart</span><span class="p">:</span><span class="w"> </span><span class="l">unless-stopped</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">http_proxy=socks5://192.168.1.9:7891</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">https_proxy=socks5://192.168.1.9:7891</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">USER_UID=1000</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">USER_GID=1000</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">TZ=Asia/Shanghai</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">br-net-metatube</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">depends_on</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">metatube-postgres</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">volumes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">/root/sharedfolder/appdata/metatube/run:/var/run</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">command</span><span class="p">:</span><span class="w"> </span>-<span class="l">dsn &#34;postgres://metatube:metatube@/metatube?host=/var/run/postgresql&#34; -port 8080 -db-auto-migrate -db-prepared-stmt</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">metatube-postgres</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">postgres:15-alpine</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">metatube-postgres</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">restart</span><span class="p">:</span><span class="w"> </span><span class="l">unless-stopped</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">USER_UID=1000</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">USER_GID=1000</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">POSTGRES_USER=metatube</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">POSTGRES_PASSWORD=metatube</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">POSTGRES_DB=metatube</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">TZ=Asia/Shanghai</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">volumes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">/root/sharedfolder/appdata/metatube/db:/var/lib/postgresql/data</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">/root/sharedfolder/appdata/metatube/run:/var/run</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">command</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;-c TimeZone=Asia/Shanghai -c log_timezone=Asia/Shanghai -c listen_addresses=&#39;&#39; -c unix_socket_permissions=0777&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">br-net-metatube</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">external</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span></code></pre></div><p><img loading="lazy" src="https://picbed-1311007548.cos.ap-shanghai.myqcloud.com/markdown_picbed/img/%2F2024%2F04%2F06%2Fbe7b2d3ceb24219c40904be9178453d8.png" alt=""  />

<div class="post-img-view">
<a data-fancybox="gallery" href="https://picbed-1311007548.cos.ap-shanghai.myqcloud.com/markdown_picbed/img/%2F2024%2F04%2F06%2Fbe7b2d3ceb24219c40904be9178453d8.png">
<img src="https://picbed-1311007548.cos.ap-shanghai.myqcloud.com/markdown_picbed/img/%2F2024%2F04%2F06%2Fbe7b2d3ceb24219c40904be9178453d8.png" alt=""  />
</a>
</div>

</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">https://mirror.ghproxy.com/https://raw.githubusercontent.com/metatube-community/jellyfin-plugin-metatube/dist/manifest.json
</span></span></code></pre></div><h3 id="欧美刮削-thepndb">欧美刮削 TheP**nDB</h3>
<p>Google 搜索 TheP**nDB 注册账号，生成 API Key，然后在插件中配置即可。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">https://mirror.ghproxy.com/https://raw.githubusercontent.com/ThePornDatabase/Jellyfin.Plugin.ThePornDB/main/manifest.json
</span></span></code></pre></div><p><img loading="lazy" src="https://picbed-1311007548.cos.ap-shanghai.myqcloud.com/markdown_picbed/img/%2F2024%2F04%2F06%2F07cb31b59456cb830769f9c355ef2224.png" alt=""  />

<div class="post-img-view">
<a data-fancybox="gallery" href="https://picbed-1311007548.cos.ap-shanghai.myqcloud.com/markdown_picbed/img/%2F2024%2F04%2F06%2F07cb31b59456cb830769f9c355ef2224.png">
<img src="https://picbed-1311007548.cos.ap-shanghai.myqcloud.com/markdown_picbed/img/%2F2024%2F04%2F06%2F07cb31b59456cb830769f9c355ef2224.png" alt=""  />
</a>
</div>

</p>
<h2 id="跳过片头-intro-skip">跳过片头 Intro-Skip</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">https://mirror.ghproxy.com/https://raw.githubusercontent.com/ConfusedPolarBear/intro-skipper/master/manifest.json
</span></span></code></pre></div>]]></content:encoded>
    </item>
  </channel>
</rss>
